# Get all news items by calling newsapi get_everything API with provided arguments.
 
# Name of the query. This name will be prefixed in the file name when the results are 
# saved in html and/or json format.It is manadatory to provide a meaningful query name.
# To set the query name, uncomment the line below and add the name
query_name: ''

# q
# Keywords or phrases to search for in the article title and body.
# Advanced search is supported here:
#       Surround phrases with quotes (") for exact match.
#       Prepend words or phrases that must appear with a + symbol. Eg: +bitcoin
#       Prepend words that must not appear with a - symbol. Eg: -bitcoin
#       Alternatively you can use the AND / OR / NOT keywords, and optionally group these 
#       with parenthesis. Eg: crypto AND (ethereum OR litecoin) NOT bitcoin.
#  The complete value for q must be URL-encoded.
q: ''

# qInTitle
# Keywords or phrases to search for in the article title only.
# Format similar to 'q' parameter above
qintitle: ''

# sources
# A comma-seperated string of identifiers (maximum 20) for the news sources or blogs you want 
# headlines from. Use the sources API to locate these programmatically or look at the 
# sources index in newsapi.org.
sources: ''

# domains
# A comma-seperated string of domains (eg bbc.co.uk, techcrunch.com, engadget.com) to restrict 
# the search to.
domains: ''

# excludeDomains
# A comma-seperated string of domains (eg bbc.co.uk, techcrunch.com, engadget.com) to remove 
# from the results.
exclude_domains: ''

# from_param
# A date and optional time for the oldest article allowed. This should be in ISO 8601 format 
# (e.g. 2020-08-25 or 2020-08-25T05:26:58) Default: the oldest according to your plan.
from_param: ''

# to
# A date and optional time for the newest article allowed. This should be in ISO 8601 format 
# (e.g. 2020-08-25 or 2020-08-25T05:26:58) Default: the newest according to your plan.
to: ''

# language
# The 2-letter ISO-639-1 code of the language you want to get headlines for. 
# Possible options: 
#      ar de en es fr he it nl no pt ru se ud zh. 
# Default: all languages returned.
language: 'en'

# sortBy
# The order to sort the articles in. 
# Possible options: 
#      relevancy = articles more closely related to q come first.
#      popularity = articles from popular sources and publishers come first.
#      publishedAt = newest articles come first.
# Default: publishedAt
sort_by: 'publishedAt'